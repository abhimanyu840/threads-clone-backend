// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String     @id @default(uuid())
  firstName       String     @map("first_name")
  lastName        String?    @map("last_name")
  profileImageURL String?    @map("profile_image_url")
  email           String     @unique
  password        String
  Post            Post[]
  Comments        Comments[]
  likedPosts      Post[]     @relation("LikedPosts")
  repostedPosts   Post[]     @relation("RepostedPosts")

  @@map("users")
}

model Post {
  id         String     @id @default(uuid())
  title      String
  content    String
  author     User       @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId   String     @map("author_id")
  image      String?
  createdAt  DateTime   @default(now())
  Comments   Comments[]
  likedBy    User[]     @relation("LikedPosts")
  repostedBy User[]     @relation("RepostedPosts")

  @@map("posts")
}

model Comments {
  id      String @id @default(uuid())
  content String
  post    Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId  String @map("post_id")
  user    User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  String @map("user_id")

  @@map("comments")
}
